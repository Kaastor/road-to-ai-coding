@model IReadOnlyList<ChatApp.Models.Message>
@{
    ViewData["Title"] = "Chat";
    var username = ViewBag.Username as string;
}

<div class="chat-container">
    <div class="chat-header">
        <h2>Chat Room</h2>
        <p>Welcome, <strong>@username</strong>! 
        <a href="@Url.Action("Index", "Home")" class="btn btn-secondary btn-sm">Change Username</a></p>
    </div>

    <div class="messages-container" id="messagesContainer">
        @if (Model.Any())
        {
            @foreach (var message in Model)
            {
                <div class="message @(message.Username == username ? "own-message" : "other-message")">
                    <div class="message-header">
                        <strong>@message.Username</strong>
                        <span class="message-time">@message.Timestamp.ToString("HH:mm:ss")</span>
                    </div>
                    <div class="message-content">@message.Content</div>
                </div>
            }
        }
        else
        {
            <div class="no-messages">
                <p>No messages yet. Be the first to say something!</p>
            </div>
        }
    </div>

    <div class="message-input-container">
        <form method="post" action="@Url.Action("SendMessage", "Home")" id="messageForm">
            <input type="hidden" name="username" value="@username" />
            <div class="input-group">
                <input type="text" name="content" id="messageContent" class="form-control" 
                       placeholder="Type your message..." required maxlength="500" />
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-scroll to bottom of messages
        function scrollToBottom() {
            const container = document.getElementById('messagesContainer');
            container.scrollTop = container.scrollHeight;
        }
        
        // Scroll to bottom on page load
        window.addEventListener('load', scrollToBottom);
        
        // Focus on message input
        document.getElementById('messageContent').focus();
        
        // Handle form submission
        document.getElementById('messageForm').addEventListener('submit', function(e) {
            const content = document.getElementById('messageContent').value.trim();
            if (!content) {
                e.preventDefault();
                return false;
            }
        });
        
        // Handle Enter key to send message
        document.getElementById('messageContent').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                document.getElementById('messageForm').submit();
            }
        });
    </script>
}