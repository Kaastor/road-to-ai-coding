# poetry install

[tool.poetry]
name = "training-app-mpc"
version = "0.1.0"
description = "Training apps"
authors = ["Your Name <you@example.com>"]

packages = [
  { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.23"
PyPDF2 = "^3.0.1"
websockets = "^12.0"
anyio = "^3.7.1"
pydantic = "^2.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.12.0"
ruff = "^0.1.9"
mypy = "^1.8.0"
reportlab = "^4.0.4"

[tool.poetry.scripts]
elevator = "app.app:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
